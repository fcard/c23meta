#ifndef C23META_U32_LOG
#define C23META_U32_LOG
#include "../../util.h"

#define U32_LOG(X,B) _U32_LOG(X,B)
#define _U32_LOG(X,B) _U32_LOG_EVAL(_U32_LOG_PREAMBLE(U32_EQ(B, U32_0), X, B))
#define _U32_LOG_EVAL(X) _U32_LOG_EVAL1(_U32_LOG_EVAL1(_U32_LOG_EVAL1(_U32_LOG_EVAL1(X))))
#define _U32_LOG_EVAL1(X) _U32_LOG_EVAL2(_U32_LOG_EVAL2(_U32_LOG_EVAL2(_U32_LOG_EVAL2(X))))
#define _U32_LOG_EVAL2(X) _U32_LOG_EVAL3(_U32_LOG_EVAL3(_U32_LOG_EVAL3(_U32_LOG_EVAL3(X))))
#define _U32_LOG_EVAL3(X) _U32_LOG_EVAL4(_U32_LOG_EVAL4(_U32_LOG_EVAL4(_U32_LOG_EVAL4(X))))
#define _U32_LOG_EVAL4(X) X

#define _U32_LOG_PREAMBLE(G,X,B) DEFER(CAT(_U32_LOG_P,G))(X,B)
#define _U32_LOG_P0(X,B) _U32_LOG_X(X,U32_0,B)
#define _U32_LOG_P1(X,B) DO_PRAGMA(GCC error "Invalid base for U32_LOG")

#define _U32_LOG_X(X,R,B) _U32_LOG_Y(U32_GEQ(X,B),X,R,B)
#define _U32_LOG_Y(G,X,R,B) DEFER(CAT(_U32_LOG_Z,G))(X,R,B)
#define _U32_LOG_Z0(X,R,B) R
#define _U32_LOG_Z1(X,R,B) OBSTRUCT(_U32_LOG_I)()(U32_DIV(X,B),U32_ADD(R,U32_1),B)
#define _U32_LOG_I() _U32_LOG_X

#endif