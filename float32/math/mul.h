#ifndef C23META_FP32_MUL
#define C23META_FP32_MUL
#include "../bits/sign.h"
#include "../bits/normalize.h"
#include "../../int32/math/add.h"
#include "../../uint64/math/mulshift32.h"

#define FP32_MUL(X,Y) FP32_MUL_EVAL(_FP32_MUL(FP32_EXPONENT(X),FP32_EXPONENT(Y), FP32_MANTISSA(X), FP32_MANTISSA(Y), FP32_CMP_SIGN(X,Y)))
#define FP32_MUL_EVAL(X) FP32_MUL_EVAL1(FP32_MUL_EVAL1(FP32_MUL_EVAL1(FP32_MUL_EVAL1(X))))
#define FP32_MUL_EVAL1(X) FP32_MUL_EVAL2(FP32_MUL_EVAL2(FP32_MUL_EVAL2(FP32_MUL_EVAL2(X))))
#define FP32_MUL_EVAL2(X) X

#define _FP32_MUL(EX,EY,MX,MY,S) _FP32_MUL_X(I32_ADD(EX,EY),U64_MULSHIFT32(MX,MY),S)
#define _FP32_MUL_X(E,M,S) DEFER(CAT(_FP32_MUL_Y_,S))(E,M)
#define _FP32_MUL_Y_POS_POS(E,M) FP32_NORMALIZE(E,M)
#define _FP32_MUL_Y_POS_NEG(E,M) FP32_NEG(FP32_NORMALIZE(E,M))
#define _FP32_MUL_Y_NEG_POS(E,M) FP32_NEG(FP32_NORMALIZE(E,M))
#define _FP32_MUL_Y_NEG_NEG(E,M) FP32_NORMALIZE(E,M)

#endif