#ifndef C23META_LIST_SORT
#define C23META_LIST_SORT

#define LIST_SORT(LT,X) _LIST_SORT_EVAL(_LIST_SORT(LT,X,LIST_NIL))
#define _LIST_SORT_EVAL(X)  _LIST_SORT_EVAL1(_LIST_SORT_EVAL1(_LIST_SORT_EVAL1(_LIST_SORT_EVAL1(X))))
#define _LIST_SORT_EVAL1(X) _LIST_SORT_EVAL2(_LIST_SORT_EVAL2(_LIST_SORT_EVAL2(_LIST_SORT_EVAL2(X))))
#define _LIST_SORT_EVAL2(X) _LIST_SORT_EVAL3(_LIST_SORT_EVAL3(_LIST_SORT_EVAL3(_LIST_SORT_EVAL3(X))))
#define _LIST_SORT_EVAL3(X) X


#define _LIST_SORT(LT,X,R) CAT(_LIST_SORT_X, LIST_IS_NIL(X))(LT,X,R)
#define _LIST_SORT_X1(LT,X,R) R
#define _LIST_SORT_X0(LT,X,R) _LIST_SORT_Y(LT,LIST_FIRST(X),LIST_REST(X),LIST_NIL,R)
#define _LIST_SORT_Y(LT,E,X,Y,R) CAT(_LIST_SORT_Z, LIST_IS_NIL(X))(LT,E,X,Y,R)
#define _LIST_SORT_Z1(LT,E,X,Y,R) DEFER(_LIST_SORT_I)()(LT,Y,(E,R))
#define _LIST_SORT_Z0(LT,E,X,Y,R) CAT(_LIST_SORT_W, LT(E,LIST_FIRST(X)))(LT,E,LIST_FIRST(X),LIST_REST(X),Y,R)
#define _LIST_SORT_W1(LT,E0,E1,X,Y,R) _LIST_SORT_V(LT,E1,X,(E0,Y),R)
#define _LIST_SORT_W0(LT,E0,E1,X,Y,R) _LIST_SORT_V(LT,E0,X,(E1,Y),R)
#define _LIST_SORT_V(LT,E,X,Y,R) DEFER(_LIST_SORT_I2)()(LT,E,X,Y,R)
#define _LIST_SORT_I() _LIST_SORT
#define _LIST_SORT_I2() _LIST_SORT_Y

#endif