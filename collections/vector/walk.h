#ifndef C23META_VECTOR_WALK
#define C23META_VECTOR_WALK


#define VECTOR32_WALK(F,X) _VECTOR32_WALK_C(F,X)
#define _VECTOR32_WALK_C(F,X) (VECTOR32_LENGTH(X),_VECTOR32_WALK_U(F,VECTOR32_AS_TUPLE(X)))
#define _VECTOR32_WALK_U(F,X) _VECTOR32_WALK_EVAL((DEFER(_VECTOR32_WALK)(F COMMA_IF X UNWRAP X)))
#define _VECTOR32_WALK_EVAL(X) _VECTOR32_WALK_EVAL1(_VECTOR32_WALK_EVAL1(_VECTOR32_WALK_EVAL1(_VECTOR32_WALK_EVAL1(X))))
#define _VECTOR32_WALK_EVAL1(X) _VECTOR32_WALK_EVAL2(_VECTOR32_WALK_EVAL2(_VECTOR32_WALK_EVAL2(_VECTOR32_WALK_EVAL2(X))))
#define _VECTOR32_WALK_EVAL2(X) _VECTOR32_WALK_EVAL3(_VECTOR32_WALK_EVAL3(_VECTOR32_WALK_EVAL3(_VECTOR32_WALK_EVAL3(X))))
#define _VECTOR32_WALK_EVAL3(X) X

#define _VECTOR32_WALK(F,...) _VECTOR32_WALK_X ## __VA_OPT__(1(F,__VA_ARGS__))
#define _VECTOR32_WALK_X1(F,X,...) CAT(_VECTOR32_WALK_Y,IS_VECTOR32(X))(F,X __VA_OPT__(,) __VA_ARGS__)
#define _VECTOR32_WALK_X
#define _VECTOR32_WALK_Y1(F,X,...) _VECTOR32_WALK_Z(F,VECTOR32_LENGTH(X),VECTOR32_AS_TUPLE(X))__VA_OPT__(,)DEFER(_VECTOR32_WALK_I)()(F __VA_OPT__(,)__VA_ARGS__)
#define _VECTOR32_WALK_Y0(F,X,...) F(X)__VA_OPT__(,)DEFER(_VECTOR32_WALK_I)()(F __VA_OPT__(,)__VA_ARGS__)
#define _VECTOR32_WALK_Z(F,LEN,X) (LEN,(DEFER(_VECTOR32_WALK_I)()(F COMMA_IF X UNWRAP X)))
#define _VECTOR32_WALK_I() _VECTOR32_WALK

#endif