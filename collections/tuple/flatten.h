#ifndef C23META_TUPLE_FLATTEN
#define C23META_TUPLE_FLATTEN

#define TUPLE_FLATTEN(X) _TUPLE_FLATTEN_EVALX(_TUPLE_REST _TUPLE_FLATTEN_EVAL((_TUPLE_FLATTEN(X,LIST_NIL))))
#define _TUPLE_FLATTEN_EVAL(X)  _TUPLE_FLATTEN_EVAL1(_TUPLE_FLATTEN_EVAL1(_TUPLE_FLATTEN_EVAL1(_TUPLE_FLATTEN_EVAL1(X))))
#define _TUPLE_FLATTEN_EVAL1(X) _TUPLE_FLATTEN_EVAL2(_TUPLE_FLATTEN_EVAL2(_TUPLE_FLATTEN_EVAL2(_TUPLE_FLATTEN_EVAL2(X))))
#define _TUPLE_FLATTEN_EVAL2(X) _TUPLE_FLATTEN_EVAL3(_TUPLE_FLATTEN_EVAL3(_TUPLE_FLATTEN_EVAL3(_TUPLE_FLATTEN_EVAL3(X))))
#define _TUPLE_FLATTEN_EVAL3(X) X
#define _TUPLE_FLATTEN_EVALX(X) X

#define _TUPLE_FLATTEN(X,L) DEFER(CAT(_TUPLE_FLATTEN_X,TUPLE_IS_EMPTY(X)))(X,L)
#define _TUPLE_FLATTEN_X1(X,L) DEFER(CAT(_TUPLE_FLATTEN_Z,LIST_IS_NIL(L)))(L)
#define _TUPLE_FLATTEN_X0(X,L) DEFER(CAT(_TUPLE_FLATTEN_Y,IS_TUPLE(TUPLE_FIRST(X))))(X,L)

#define _TUPLE_FLATTEN_Y1(X,L) DEFER(_TUPLE_FLATTEN_I())(TUPLE_FIRST(X), (TUPLE_REST(X),L))
#define _TUPLE_FLATTEN_Y0(X,L) ,TUPLE_FIRST(X)DEFER(_TUPLE_FLATTEN_I)()(TUPLE_REST(X),L)

#define _TUPLE_FLATTEN_Z1(L)
#define _TUPLE_FLATTEN_Z0(L) DEFER(_TUPLE_FLATTEN_I)()(LIST_FIRST(L),LIST_REST(L))

#define _TUPLE_FLATTEN_I() _TUPLE_FLATTEN


#endif