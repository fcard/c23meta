#ifndef C23META_TUPLE_SORT
#define C23META_TUPLE_SORT

#define TUPLE_SORT(LT,X) _TUPLE_SORT_EVAL(_TUPLE_SORT(LT,X,()))
#define _TUPLE_SORT_EVAL(X)  _TUPLE_SORT_EVAL1(_TUPLE_SORT_EVAL1(_TUPLE_SORT_EVAL1(_TUPLE_SORT_EVAL1(X))))
#define _TUPLE_SORT_EVAL1(X) _TUPLE_SORT_EVAL2(_TUPLE_SORT_EVAL2(_TUPLE_SORT_EVAL2(_TUPLE_SORT_EVAL2(X))))
#define _TUPLE_SORT_EVAL2(X) _TUPLE_SORT_EVAL3(_TUPLE_SORT_EVAL3(_TUPLE_SORT_EVAL3(_TUPLE_SORT_EVAL3(X))))
#define _TUPLE_SORT_EVAL3(X) X


#define _TUPLE_SORT(LT,X,R) CAT(_TUPLE_SORT_X, TUPLE_IS_EMPTY(X))(LT,X,R)
#define _TUPLE_SORT_X1(LT,X,R) R
#define _TUPLE_SORT_X0(LT,X,R) _TUPLE_SORT_Y(LT,TUPLE_FIRST(X),TUPLE_REST(X),(),R)
#define _TUPLE_SORT_Y(LT,E,X,Y,R) CAT(_TUPLE_SORT_Z, TUPLE_IS_EMPTY(X))(LT,E,X,Y,R)
#define _TUPLE_SORT_Z1(LT,E,X,Y,R) DEFER(_TUPLE_SORT_I)()(LT,Y,TUPLE_PUSH(R,E))
#define _TUPLE_SORT_Z0(LT,E,X,Y,R) CAT(_TUPLE_SORT_W, LT(TUPLE_FIRST(X),E))(LT,E,TUPLE_FIRST(X),TUPLE_REST(X),Y,R)
#define _TUPLE_SORT_W1(LT,E0,E1,X,Y,R) _TUPLE_SORT_V(LT,E1,X,TUPLE_PUSH(Y,E0),R)
#define _TUPLE_SORT_W0(LT,E0,E1,X,Y,R) _TUPLE_SORT_V(LT,E0,X,TUPLE_PUSH(Y,E1),R)
#define _TUPLE_SORT_V(LT,E,X,Y,R) DEFER(_TUPLE_SORT_I2)()(LT,E,X,Y,R)
#define _TUPLE_SORT_I() _TUPLE_SORT
#define _TUPLE_SORT_I2() _TUPLE_SORT_Y

#endif