#ifndef C23META_FP32_FRACT
#define C23META_FP32_FRACT

#define FP32_FRACT(X) _FP32_FRACT_C(X)
#define _FP32_FRACT_C(X) CAT(_FP32_FRACT_CHECK_, FP32_CLASSIFY(X))(X)

#define _FP32_FRACT_CHECK_NAN(X) FP32_NAN
#define _FP32_FRACT_CHECK_INFINITY(X) X
#define _FP32_FRACT_CHECK_ZERO(X) X
#define _FP32_FRACT_CHECK_OTHER(X) FP32_FRACT_UNCHECKED(X)

#define FP32_FRACT_UNCHECKED(X) _FP32_FRACT_EVAL(_FP32_FRACT_X(FP32_SIGN_BIT(X),FP32_MANTISSA(X),FP32_EXPONENT(X)))
#define _FP32_FRACT_EVAL(X) _FP32_FRACT_EVAL1(_FP32_FRACT_EVAL1(_FP32_FRACT_EVAL1(_FP32_FRACT_EVAL1(X))))
#define _FP32_FRACT_EVAL1(X) _FP32_FRACT_EVAL2(_FP32_FRACT_EVAL2(_FP32_FRACT_EVAL2(_FP32_FRACT_EVAL2(X))))
#define _FP32_FRACT_EVAL2(X) _FP32_FRACT_EVAL3(_FP32_FRACT_EVAL3(_FP32_FRACT_EVAL3(_FP32_FRACT_EVAL3(X))))
#define _FP32_FRACT_EVAL3(X) X

#define _FP32_FRACT_X(S,M,E)\
  _FP32_FRACT_Y(\
    S,\
    U32_AND(M, U32_SUB(U32_LSH(U32_1, U32_SUB(U32_23, E)), U32_1)),\
    E\
  )
#define _FP32_FRACT_Y(S,M,E) FP32_NORMALIZE(E,M)

#endif