#ifndef C23META_FP32_SQRT
#define C23META_FP32_SQRT
#include "../bits/sign.h"
#include "../bits/normalize.h"

#define FP32_SQRT(X) FP32_SQRT_EVAL(_FP32_SQRT(FP32_EXPONENT(X),FP32_MANTISSA(X),FP32_SIGN_BIT(X)))
#define FP32_SQRT_EVAL(X) FP32_SQRT_EVAL1(FP32_SQRT_EVAL1(FP32_SQRT_EVAL1(FP32_SQRT_EVAL1(X))))
#define FP32_SQRT_EVAL1(X) FP32_SQRT_EVAL2(FP32_SQRT_EVAL2(FP32_SQRT_EVAL2(FP32_SQRT_EVAL2(X))))
#define FP32_SQRT_EVAL2(X) X

#define _FP32_SQRT(E,M,S) CAT(_FP32_SQRT_X,I32_IS_ODD(E))(E,M,S)
#define _FP32_SQRT_X1(E,M,S) _FP32_SQRT_Y(I32_RSH1(E),U128H_SQRTSHIFT32(U32_LSH1(M)),S)
#define _FP32_SQRT_X0(E,M,S) _FP32_SQRT_Y(I32_RSH1(E),U128H_SQRTSHIFT32(M),S)
#define _FP32_SQRT_Y(E,M,S) DEFER(CAT(_FP32_SQRT_Z_,S))(E,M)
#define _FP32_SQRT_Z_0(E,M) FP32_NORMALIZE(E,M)
#define _FP32_SQRT_Z_1(E,M) _Pragma("GCC error \"Square root of negative number.\"")

#endif