#ifndef C23META_U128H_LOG
#define C23META_U128H_LOG

#define U128H_LOG(X,B) _U128H_LOG(X,B)
#define _U128H_LOG(X,B) _U128H_LOG_EVAL(_U128H_LOG_PREAMBLE(U128H_EQ(B, U128H_0), X, B))
#define _U128H_LOG_EVAL(X) _U128H_LOG_EVAL1(_U128H_LOG_EVAL1(_U128H_LOG_EVAL1(_U128H_LOG_EVAL1(X))))
#define _U128H_LOG_EVAL1(X) _U128H_LOG_EVAL2(_U128H_LOG_EVAL2(_U128H_LOG_EVAL2(_U128H_LOG_EVAL2(X))))
#define _U128H_LOG_EVAL2(X) _U128H_LOG_EVAL3(_U128H_LOG_EVAL3(_U128H_LOG_EVAL3(_U128H_LOG_EVAL3(X))))
#define _U128H_LOG_EVAL3(X) _U128H_LOG_EVAL4(_U128H_LOG_EVAL4(_U128H_LOG_EVAL4(_U128H_LOG_EVAL4(X))))
#define _U128H_LOG_EVAL4(X) X

#define _U128H_LOG_PREAMBLE(G,X,B) CAT(_U128H_LOG_P,G)(X,B)
#define _U128H_LOG_P0(X,B) _U128H_LOG_X(X,U128H_0,B)
#define _U128H_LOG_P1(X,B) DO_PRAGMA(GCC error "Invalid base for U128H_LOG")

#define _U128H_LOG_X(X,R,B) _U128H_LOG_Y(U128H_GEQ(X,B),X,R,B)
#define _U128H_LOG_Y(G,X,R,B) CAT(_U128H_LOG_Z,G)(X,R,B)
#define _U128H_LOG_Z0(X,R,B) R
#define _U128H_LOG_Z1(X,R,B) DEFER(_U128H_LOG_I)()(U128H_DIV(X,B),U128H_ADD(R,U128H_1),B)
#define _U128H_LOG_I() _U128H_LOG_X

#endif