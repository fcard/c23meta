#ifndef C23META_U128H_REM
#define C23META_U128H_REM
#include "../cmp/geq.h"
#include "../cmp/eq.h"

#define U128H_REM(X,Y) _U128H_REM(X,Y)
#define _U128H_REM(X,Y) _U128H_REM_EVAL(DEFER(_U128H_REM_X)(UNWRAP X, Y))
#define _U128H_REM_EVAL(X) _U128H_REM_EVAL1(_U128H_REM_EVAL1(_U128H_REM_EVAL1(_U128H_REM_EVAL1(X))))
#define _U128H_REM_EVAL1(X) _U128H_REM_EVAL2(_U128H_REM_EVAL2(_U128H_REM_EVAL2(_U128H_REM_EVAL2(X))))
#define _U128H_REM_EVAL2(X) _U128H_REM_EVAL3(_U128H_REM_EVAL3(_U128H_REM_EVAL3(_U128H_REM_EVAL3(X))))
#define _U128H_REM_EVAL3(X) _U128H_REM_EVAL4(_U128H_REM_EVAL4(_U128H_REM_EVAL4(_U128H_REM_EVAL4(X))))
#define _U128H_REM_EVAL4(X) X

#define _U128H_REM_X(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22,A23,A24,A25,A26,A27,A28,A29,A30,A31,B)\
  HEXREM128_PREAMBLE(U128H_EQ(B,U128H_0),B,A31,A30,A29,A28,A27,A26,A25,A24,A23,A22,A21,A20,A19,A18,A17,A16,A15,A14,A13,A12,A11,A10,A9,A8,A7,A6,A5,A4,A3,A2,A1,A0)

#define HEXREM128_PREAMBLE(EQ0,D,...) DEFER(CAT(HEXREM128_P,EQ0))(U128H_0, D __VA_OPT__(,) __VA_ARGS__)
#define HEXREM128_P0(...) HEXREM128(__VA_ARGS__)
#define HEXREM128_P1(...) U128H_0 _Pragma("GCC error \"Division by Zero\"")

#define HEXREM128(R,D,A,...) HEXREM128X(U128H_LSHIFTREP1(A,R), D __VA_OPT__(,) __VA_ARGS__)
#define HEXREM128X(R,D,...) HEXREM128Y(U128H_GEQ(R,D), R, D __VA_OPT__(,) __VA_ARGS__)
#define HEXREM128Y(G,R,...) DEFER(CAT(HEXREM128Z_,G))(R,__VA_ARGS__)
#define HEXREM128Z_0(R,D,...) HEXREM128U_ ## __VA_OPT__(U(R,D,__VA_ARGS__) IGNORE) (R,D)
#define HEXREM128Z_1(R,D,...) DEFER(HEXREM128_I2)()(U128H_SUB(R,D), D __VA_OPT__(,) __VA_ARGS__)
#define HEXREM128U_U(R,D,...) DEFER(HEXREM128_I)()(R,D,__VA_ARGS__)
#define HEXREM128U_(R,D) HEXREM128V(U128H_GEQ(R,D),R,D)
#define HEXREM128V(G,R,D) DEFER(CAT(HEXREM128W_,G))(R,D)
#define HEXREM128W_0(R,D) R
#define HEXREM128W_1(R,D) DEFER(HEXREM128_I3)()(U128H_SUB(R,D),D)
#define HEXREM128_I() HEXREM128
#define HEXREM128_I2() HEXREM128X
#define HEXREM128_I3() HEXREM128U_

#endif