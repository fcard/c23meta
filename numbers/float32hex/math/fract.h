#ifndef C23META_FP32H_FRACT
#define C23META_FP32H_FRACT

#define FP32H_FRACT(X) _FP32H_FRACT_C(X)
#define _FP32H_FRACT_C(X) CAT(_FP32H_FRACT_CHECK_, FP32H_CLASSIFY(X))(X)

#define _FP32H_FRACT_CHECK_nan(X) FP32H_NAN
#define _FP32H_FRACT_CHECK_infinity(X) X
#define _FP32H_FRACT_CHECK_zero(X) X
#define _FP32H_FRACT_CHECK_other(X) FP32H_FRACT_UNCHECKED(X)

#define FP32H_FRACT_UNCHECKED(X) _FP32H_FRACT_EVAL(_FP32H_FRACT_X(FP32H_SIGN_BIT(X),FP32H_MANTISSA(X),FP32H_EXPONENT(X)))
#define _FP32H_FRACT_EVAL(X) _FP32H_FRACT_EVAL1(_FP32H_FRACT_EVAL1(_FP32H_FRACT_EVAL1(_FP32H_FRACT_EVAL1(X))))
#define _FP32H_FRACT_EVAL1(X) _FP32H_FRACT_EVAL2(_FP32H_FRACT_EVAL2(_FP32H_FRACT_EVAL2(_FP32H_FRACT_EVAL2(X))))
#define _FP32H_FRACT_EVAL2(X) _FP32H_FRACT_EVAL3(_FP32H_FRACT_EVAL3(_FP32H_FRACT_EVAL3(_FP32H_FRACT_EVAL3(X))))
#define _FP32H_FRACT_EVAL3(X) X

#define _FP32H_FRACT_X(S,M,E)\
  _FP32H_FRACT_Y(\
    S,\
    U32H_AND(M, U32H_SUB(U32H_LSH(U32H_1, U32H_SUB(U32H_23, E)), U32H_1)),\
    E\
  )
#define _FP32H_FRACT_Y(S,M,E) FP32H_NORMALIZE(E,M)

#endif