#ifndef C23META_FP32H_MUL
#define C23META_FP32H_MUL

#define FP32H_MUL(X,Y) _FP32H_MUL_C(X,Y)
#define _FP32H_MUL_C(X,Y) CAT_ALL(_FP32H_MUL_CHECK_, FP32H_CLASSIFY(X), _, FP32H_CLASSIFY(Y))(X,Y)

#define _FP32H_MUL_CHECK_NAN_NAN(X,Y) FP32H_NAN
#define _FP32H_MUL_CHECK_OTHER_NAN(X,Y) FP32H_NAN
#define _FP32H_MUL_CHECK_ZERO_NAN(X,Y) FP32H_NAN
#define _FP32H_MUL_CHECK_INFINITY_NAN(X,Y) FP32H_NAN
#define _FP32H_MUL_CHECK_NAN_OTHER(X,Y) FP32H_NAN
#define _FP32H_MUL_CHECK_NAN_ZERO(X,Y) FP32H_NAN
#define _FP32H_MUL_CHECK_NAN_INFINITY(X,Y) FP32H_NAN

#define _FP32H_MUL_CHECK_INFINITY_INFINITY(X,Y) CAT(_FP32H_MUL_CHECK_, FP32H_CMP_SIGN(X,Y))(FP32H_INF)
#define _FP32H_MUL_CHECK_INFINITY_OTHER(X,Y) CAT(_FP32H_MUL_CHECK_, FP32H_CMP_SIGN(X,Y))(FP32H_INF)
#define _FP32H_MUL_CHECK_INFINITY_ZERO(X,Y) CAT(_FP32H_MUL_CHECK_, FP32H_CMP_SIGN(X,Y))(FP32H_INF)
#define _FP32H_MUL_CHECK_OTHER_INFINITY(X,Y) CAT(_FP32H_MUL_CHECK_, FP32H_CMP_SIGN(X,Y))(FP32H_INF)
#define _FP32H_MUL_CHECK_ZERO_INFINITY(X,Y) CAT(_FP32H_MUL_CHECK_, FP32H_CMP_SIGN(X,Y))(FP32H_INF)

#define _FP32H_MUL_CHECK_OTHER_OTHER(X,Y) FP32H_MUL_UNCHECKED(X,Y)
#define _FP32H_MUL_CHECK_OTHER_ZERO(X,Y) CAT(_FP32H_MUL_CHECK_, FP32H_CMP_SIGN(X,Y))(FP32H_0)
#define _FP32H_MUL_CHECK_ZERO_OTHER(X,Y) CAT(_FP32H_MUL_CHECK_, FP32H_CMP_SIGN(X,Y))(FP32H_0)

#define _FP32H_MUL_CHECK_ZERO_ZERO(X,Y) CAT(_FP32H_MUL_CHECK_, FP32H_CMP_SIGN(X,Y))(FP32H_0)

#define _FP32H_MUL_CHECK_POS_POS(X) X
#define _FP32H_MUL_CHECK_POS_NEG(X) FP32H_NEG(X)
#define _FP32H_MUL_CHECK_NEG_POS(X) FP32H_NEG(X)
#define _FP32H_MUL_CHECK_NEG_NEG(X) X

#define FP32H_MUL_UNCHECKED(X,Y) FP32H_MUL_EVAL(_FP32H_MUL(FP32H_EXPONENT(X),FP32H_EXPONENT(Y),FP32H_MANTISSA(X),FP32H_MANTISSA(Y), FP32H_CMP_SIGN(X,Y)))
#define FP32H_MUL_EVAL(X) FP32H_MUL_EVAL1(FP32H_MUL_EVAL1(FP32H_MUL_EVAL1(FP32H_MUL_EVAL1(X))))
#define FP32H_MUL_EVAL1(X) FP32H_MUL_EVAL2(FP32H_MUL_EVAL2(FP32H_MUL_EVAL2(FP32H_MUL_EVAL2(X))))
#define FP32H_MUL_EVAL2(X) X

#define _FP32H_MUL(EX,EY,MX,MY,S) _FP32H_MUL_X(I32H_ADD(EX,EY),U64H_MULSHIFT32(MX,MY),S)
#define _FP32H_MUL_X(E,M,S) CAT(_FP32H_MUL_Y_,S)(E,M)
#define _FP32H_MUL_Y_POS_POS(E,M) FP32H_NORMALIZE(E,M)
#define _FP32H_MUL_Y_POS_NEG(E,M) FP32H_NEG(FP32H_NORMALIZE(E,M))
#define _FP32H_MUL_Y_NEG_POS(E,M) FP32H_NEG(FP32H_NORMALIZE(E,M))
#define _FP32H_MUL_Y_NEG_NEG(E,M) FP32H_NORMALIZE(E,M)

#define FP32H_MUL2(X) FP32H_MUL_2PN(X,I32H_1)
#define FP32H_MUL4(X) FP32H_MUL_2PN(X,I32H_2)
#define FP32H_MUL8(X) FP32H_MUL_2PN(X,I32H_3)
#define FP32H_MUL16(X) FP32H_MUL_2PN(X,I32H_4)
#define FP32H_MUL32(X) FP32H_MUL_2PN(X,I32H_5)
#define FP32H_MUL64(X) FP32H_MUL_2PN(X,I32H_6)
#define FP32H_MUL128(X) FP32H_MUL_2PN(X,I32H_7)
#define FP32H_MUL256(X) FP32H_MUL_2PN(X,I32H_8)

#define FP32H_MUL_2PN(X,N) _FP32H_MUL_2PN_C(X,N)
#define _FP32H_MUL_2PN_C(X,N) FP32H_FROM_PARTS(FP32H_SIGN_BIT(X), I32H_ADD(FP32H_EXPONENT(X), N), FP32H_MANTISSA(X))

#endif